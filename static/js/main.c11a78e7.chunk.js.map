{"version":3,"sources":["component/SeasonDisplay.js","component/Spinner.js","App.js","index.js"],"names":["seasonConfig","summer","text","iconName","winter","SeasonDisplay","props","lat","month","season","Date","getMonth","className","Spinner","class","message","App","state","err","navigator","geolocation","getCurrentPosition","position","setState","coords","latitude","this","style","textAlign","color","marginTop","React","Component","ReactDOM","render","document","getElementById"],"mappings":"0NAGMA,EAAe,CACjBC,OAAQ,CACJC,KAAM,qBACNC,SAAU,OAEdC,OAAQ,CACJF,KAAM,oBACNC,SAAU,cAwBHE,EAXO,SAACC,GACtB,IAVkBC,EAAKC,EAUjBC,GAVYF,EAUOD,EAAMC,KAVRC,GAUa,IAAIE,MAAOC,YATrC,GAAKH,EAAQ,EACbD,EAAM,EAAI,SAAW,SAGrBA,EAAM,EAAI,SAAW,UAMhC,EAAyBP,EAAaS,GAA/BP,EAAP,EAAOA,KAAMC,EAAb,EAAaA,SACT,OACI,sBAAKS,UAAS,yBAAoBH,GAAlC,UACI,mBAAGG,UAAS,4BAAuBT,EAAvB,WACZ,6BAAKD,IACL,mBAAGU,UAAS,6BAAwBT,EAAxB,eCpBTU,EAPC,SAACP,GACb,OACI,qBAAKQ,MAAM,mBAAX,SACE,qBAAKA,MAAM,yBAAX,SAAqCR,EAAMS,aCD/CC,E,4MACJC,MAAQ,CAAEV,IAAK,KAAMW,IAAK,I,uDAC1B,WAAqB,IAAD,OAClBC,UAAUC,YAAYC,oBACpB,SAACC,GAAD,OAAc,EAAKC,SAAS,CAAChB,IAAKe,EAASE,OAAOC,cAClD,SAACP,GAAD,OAAS,EAAKK,SAAS,CAACL,IAAKA,EAAIH,e,oBAGrC,WACE,OAAGW,KAAKT,MAAMC,MAAQQ,KAAKT,MAAMV,IACxB,qBAAIoB,MAAO,CAACC,UAAW,SAAUC,MAAO,MAAOC,UAAW,OAA1D,iBAAuEJ,KAAKT,MAAMC,QAEvFQ,KAAKT,MAAMC,KAAOQ,KAAKT,MAAMV,IACxB,cAAC,EAAD,CAAeA,IAAKmB,KAAKT,MAAMV,MAGpC,8BACC,cAAC,EAAD,CAASQ,QAAQ,yC,GAjBRgB,IAAMC,WAwBThB,ICxBfiB,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.c11a78e7.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./SeasonDisplay.css\";\r\n\r\nconst seasonConfig = {\r\n    summer: {\r\n        text: \"Lets hit the beach\",\r\n        iconName: \"sun\"\r\n    },\r\n    winter: {\r\n        text: \"Burr it is chill!\",\r\n        iconName: \"snowflake\"\r\n    }\r\n}\r\n\r\nconst getSeason = (lat, month) => {\r\nif(month > 2 && month < 9 ) {\r\n    return lat > 0 ? 'summer' : 'winter';\r\n}\r\nelse {\r\n    return lat < 0 ? 'winter' : 'summer';\r\n}\r\n};\r\n\r\nconst SeasonDisplay = (props) => {\r\n const season = getSeason(props.lat, new Date().getMonth());\r\nconst {text, iconName} = seasonConfig[season];  \r\n    return (\r\n        <div className={`season-display ${season}`}>\r\n            <i className={`icon-left massive ${iconName} icon`}/>\r\n            <h1>{text}</h1>\r\n            <i className={`icon-right massive ${iconName} icon`}/>\r\n        </div>\r\n    );\r\n}\r\nexport default SeasonDisplay;","import React from \"react\";\r\n\r\n\r\nconst Spinner = (props) => {\r\n    return (\r\n        <div class=\"ui active dimmer\">\r\n          <div class=\"ui massive text loader\">{props.message}</div>\r\n        </div>     \r\n    );\r\n}\r\nexport default Spinner;","import React from \"react\";\nimport SeasonDisplay from \"./component/SeasonDisplay\";\nimport Spinner from \"./component/Spinner\";\n\n\nclass App extends React.Component{\n  state = { lat: null, err: \"\"};\n  componentDidMount() {\n    navigator.geolocation.getCurrentPosition(\n      (position) => this.setState({lat: position.coords.latitude}),\n      (err) => this.setState({err: err.message}) \n      );\n  }\n  render(){\n    if(this.state.err && !this.state.lat){\n      return <h1 style={{textAlign: \"center\", color: \"red\", marginTop: \"20%\"}}>err:{this.state.err}</h1>\n    }\n    if(!this.state.err && this.state.lat){\n      return <SeasonDisplay lat={this.state.lat} />\n    }\n        return(\n        <div>\n         <Spinner message=\"Please accept location request\" />     \n        </div>\n    );\n  }\n\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}